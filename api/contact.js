const async = require('async')
const mailgun = require('mailgun-js')({apiKey: '981a07e009ebb0082889bec34eace89a-c9270c97-7ea4e763', domain: 'mg.aesopagency.com'})
const _ = require('lodash')
const Joi = require('joi')

const FIELDS = {
  name: Joi.string().required(),
  email: Joi.string().email().required(),
  phone: Joi.string().required(),
  body: Joi.string().required()
}

const trim = (body, callback) => {
  console.log('trimming body...')
  const data = {}
  _.each(FIELDS, (val, name) => {
    data[name] = _.get(body, name, '').trim()
  })
  return callback(null, data)
}

const validate = (data, callback) => {
  console.log('validating...')
  Joi.validate(data, Joi.object().keys(FIELDS), {abortEarly: false}, (err, data) => {
    if (err) {
      const validation = _(err.details)
        .mapKeys(v => v.path.join('.'))
        .mapValues(v => v.message)
        .value()
      return callback(err, {data, validation})
    }
    callback(null, data)
  })
}

const sendMail = (data, callback) => {
  console.log('sending...')
  mailgun.messages().send({
    from: `${data.name} <${data.email}>`,
    to: 'info@thestorymakers.com',
    subject: 'Automatic response generated by Aesop contact form submission',
    text: [
      `Name: ${data.name}`,
      `Email: ${data.email}`,
      `Phone: ${data.phone}`,
      '',
      `${data.body}`
    ].join('\n'),
    html: [
      `<b>Name:</b> ${data.name}`,
      `<b>Email:</b> ${data.email}`,
      `<b>Phone:</b> ${data.phone}`,
      '',
      `${data.body.replace(/(?:\r\n|\r|\n)/g, '<br />')}`
    ].join('<br/>')
  }, function (err, res) {
    if (err) {
      console.error(err)
      return callback(error)
    }

    return callback(null, {message: res})
  })
}

module.exports = (req, res, next) => {
  console.log('starting...')
  // console.log(req)

  async.waterfall([
    async.apply(trim, req.body),
    validate,
    sendMail
  ], (err, result) => {

    if (err) {
      res.status(500)
    // result.message = err
    } else {
      res.status(200)
    // result.payload = res
    }

    // result.processed = !err
    // result.error = (err)

    res.json({err, result})
  })
}
